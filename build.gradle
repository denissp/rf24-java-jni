buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
}

group 'pl.grzeslowski.smarthome.rf24'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8

sourceSets {
	examples {
		java {
			srcDir "src/main/examples"
		}
	}
}

repositories {
	mavenCentral()
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'
}

ext {
	javaJni = ext.has('javaJni') ? javaJni : '/usr/lib/jvm/java-8-openjdk-amd64/include'
	javaJniPlatformSpecyfic = ext.has('javaJniPlatformSpecyfic') ? javaJniPlatformSpecyfic : "$javaJni/linux"

	pathToUtility = 'native/RF24/utility'
	utilityFolder = pathToUtility + (ext.has('utilityFolder') ? utilityFolder : "/RPi")

	wrapperBuildDir = ext.has('buildDir') ? wrapperBuildDir : "$project.buildDir/wrapper"

	swigPackage = "${project.group}.generated"
}

task compileSwig(type: Exec) {
	group 'SWIG'
	commandLine "bin/swig-3.0.10/swig"
	//noinspection GroovyAssignabilityCheck
	args "-v", "-c++", '-java', '-outdir', "src/main/java/${swigPackage.replace(".", "/")}", "-package", "${swigPackage}", "swig-config/rf24bcmjava.i"
	standardOutput = new ByteArrayOutputStream()
}

task cleanSwig(type: Delete) {
	group 'SWIG'
	delete fileTree(dir: "src/main/java/${swigPackage.replace(".", "/")}")
	followSymlinks = false
}

task createBuildDirForWrapper << {
	group 'Build wrapper'
	final buildDir = file(wrapperBuildDir)
	if(!buildDir.exists()) {
		buildDir.mkdirs()
	}
}

task copyIncludesForWrapper(type: Copy) {
	group 'Build wrapper'
	from utilityFolder
	into pathToUtility
}

task cleanAfterCompileWrapper(type: Delete) {
	group 'Build wrapper'
	delete fileTree(dir: pathToUtility).include('*')
	delete file('rf24bcmjava_wrap.o')
}
tasks.clean.dependsOn += tasks.cleanAfterCompileWrapper

task compileWrapper(type: Exec, dependsOn: ['copyIncludesForWrapper', 'createBuildDirForWrapper']) {
	group 'Build wrapper'
	commandLine "g++"
	//noinspection GroovyAssignabilityCheck
	args "-fPIC", "-c", "swig-config/rf24bcmjava_wrap.cxx", "-I$javaJni", "-I$javaJniPlatformSpecyfic",
			"-I./native/RF24", "-I./native/RF24/utility", "-o", "$wrapperBuildDir/rf24bcmjava_wrap.o"
}

task compileRf24(type: Exec, dependsOn: 'compileWrapper') {
	group 'Build wrapper'
	commandLine "gcc"
	//noinspection GroovyAssignabilityCheck
	args "-fPIC", "-c",
			"$wrapperBuildDir/rf24bcmjava_wrap.o", "native/RF24/librf24.so.1.1.7",
			"-o", "$wrapperBuildDir/RF24.o"
}

task linkWrapper(type: Exec, dependsOn: ['compileWrapper', 'compileRf24', 'createBuildDirForWrapper']) {
	group 'Build wrapper'
	commandLine "ld"
	//noinspection GroovyAssignabilityCheck
	args "-G", "$wrapperBuildDir/rf24bcmjava_wrap.o", "$wrapperBuildDir/RF24.o",
			"-o", "${wrapperBuildDir}/librf24bcmjava.so",
			"-rpath", "$project.projectDir/native/RF24",
			"-L$project.projectDir/native/RF24" //, "-lnetsnmp"
}
tasks.linkWrapper.dependsOn += tasks.compileWrapper

allprojects {
	tasks.withType(Exec) {
		doFirst {
			println "Cmd to be executed:"
			println " > " + commandLine.join(' ')
		}
	}
}